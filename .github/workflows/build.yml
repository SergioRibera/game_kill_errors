name: Build

permissions:
  contents: write

env:
  APP_NAME: kill_errors

on:
  workflow_run:
    types:
      - completed
    workflows: ["CI"]

jobs:
  build_native:
    if: ${{ contains(github.ref_name, 'v') }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-apple-darwin
          - x86_64-pc-windows-msvc
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: x86_64-unknown-linux-gnu.tar.gz
          - target: x86_64-apple-darwin
            os: macos-latest
            name: x86_64-apple-darwin.tar.gz
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: x86_64-pc-windows-msvc.zip

    steps:
      - uses: actions/checkout@v3
      - uses: dsherret/rust-toolchain-file@v1
      - uses: Swatinem/rust-cache@v2
      - name: Load .env file
        uses: xom9ikk/dotenv@v2
        with:
          mode: release
          path: ./.env
      - name: Install dependencies
        run: |
          export DEBIAN_FRONTED=noninteractive
          sudo apt-get -qq update
          sudo apt-get install -y libxdo-dev libasound2-dev libudev-dev pkg-config
      - name: build release
        uses: actions-rs/cargo@v1.0.1
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Post Build | Prepare artifacts [Windows]
        if: matrix.os == 'windows-latest'
        run: |
          cd launchers/native
          7z a ../../${{ matrix.name }} static/
          cd -
          cd target/${{ matrix.target }}/release
          mv native-launcher.exe ${{ env.APP_NAME }}.exe
          7z a ../../../${{ matrix.name }} ${{ env.APP_NAME }}.exe
          cd -
          7z a ${{ matrix.name }} assets/
          mv ${{ matrix.name }} ${{ env.APP_NAME }}-${{ matrix.name }}

      - name: Post Build | Prepare artifacts [-nix]
        if: matrix.os != 'windows-latest'
        run: |
          cd launchers/native
          mv static/ ../../
          cd -
          cd target/${{ matrix.target }}/release
          mv native-launcher ../../../${{ env.APP_NAME }}
          cd -
          tar cvzf ${{ matrix.name }} assets/ static/ ${{ env.APP_NAME }}
          mv ${{ matrix.name }} ${{ env.APP_NAME }}-${{ matrix.name }}

      - name: Release | Upload
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.APP_NAME }}-${{ matrix.name }}
          prerelease: ${{ contains(github.ref_name, 'a') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
